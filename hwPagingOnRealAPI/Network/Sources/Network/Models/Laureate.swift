//
// Laureate.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Laureate&#39;s full information and their respectives awarded Prizes */
public struct Laureate: Codable, JSONEncodable, Hashable {

    public var id: Int?
    public var laureateIfPerson: Person?
    public var laureateIfOrg: Organization?
    public var wikipedia: LaureateWikipedia?
    public var wikidata: LaureateWikidata?
    public var sameas: [String]?
    public var links: ItemLinks?
    public var nobelPrizes: [NobelPrizePerLaureate]?

    public init(id: Int? = nil, laureateIfPerson: Person? = nil, laureateIfOrg: Organization? = nil, wikipedia: LaureateWikipedia? = nil, wikidata: LaureateWikidata? = nil, sameas: [String]? = nil, links: ItemLinks? = nil, nobelPrizes: [NobelPrizePerLaureate]? = nil) {
        self.id = id
        self.laureateIfPerson = laureateIfPerson
        self.laureateIfOrg = laureateIfOrg
        self.wikipedia = wikipedia
        self.wikidata = wikidata
        self.sameas = sameas
        self.links = links
        self.nobelPrizes = nobelPrizes
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case laureateIfPerson
        case laureateIfOrg
        case wikipedia
        case wikidata
        case sameas
        case links
        case nobelPrizes
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(laureateIfPerson, forKey: .laureateIfPerson)
        try container.encodeIfPresent(laureateIfOrg, forKey: .laureateIfOrg)
        try container.encodeIfPresent(wikipedia, forKey: .wikipedia)
        try container.encodeIfPresent(wikidata, forKey: .wikidata)
        try container.encodeIfPresent(sameas, forKey: .sameas)
        try container.encodeIfPresent(links, forKey: .links)
        try container.encodeIfPresent(nobelPrizes, forKey: .nobelPrizes)
    }
}

