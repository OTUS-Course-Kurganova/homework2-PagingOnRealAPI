//
// NobelPrizesResult.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Successful response for Nobel Prize search */
public struct NobelPrizesResult: Codable, JSONEncodable, Hashable {

    public var nobelPrizes: [NobelPrize]?
    public var meta: NobelPrizesMeta?
    public var links: Links?

    public init(nobelPrizes: [NobelPrize]? = nil, meta: NobelPrizesMeta? = nil, links: Links? = nil) {
        self.nobelPrizes = nobelPrizes
        self.meta = meta
        self.links = links
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case nobelPrizes
        case meta
        case links
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(nobelPrizes, forKey: .nobelPrizes)
        try container.encodeIfPresent(meta, forKey: .meta)
        try container.encodeIfPresent(links, forKey: .links)
    }
}

