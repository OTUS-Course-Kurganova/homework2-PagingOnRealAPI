//
// Person.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Fullname is the combination of given and family name */
public struct Person: Codable, JSONEncodable, Hashable {

    public enum Gender: String, Codable, CaseIterable {
        case female = "female"
        case male = "male"
    }
    public var knownName: Translation?
    public var givenName: Translation?
    public var familyName: Translation?
    public var fullName: Translation?
    /** Short slug version of familyname used in filenames */
    public var filename: String?
    /** Only for some Laureates in Literature category */
    public var penname: String?
    public var gender: Gender?
    public var birth: Event?
    public var death: Event?

    public init(knownName: Translation? = nil, givenName: Translation? = nil, familyName: Translation? = nil, fullName: Translation? = nil, filename: String? = nil, penname: String? = nil, gender: Gender? = nil, birth: Event? = nil, death: Event? = nil) {
        self.knownName = knownName
        self.givenName = givenName
        self.familyName = familyName
        self.fullName = fullName
        self.filename = filename
        self.penname = penname
        self.gender = gender
        self.birth = birth
        self.death = death
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case knownName
        case givenName
        case familyName
        case fullName
        case filename
        case penname
        case gender
        case birth
        case death
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(knownName, forKey: .knownName)
        try container.encodeIfPresent(givenName, forKey: .givenName)
        try container.encodeIfPresent(familyName, forKey: .familyName)
        try container.encodeIfPresent(fullName, forKey: .fullName)
        try container.encodeIfPresent(filename, forKey: .filename)
        try container.encodeIfPresent(penname, forKey: .penname)
        try container.encodeIfPresent(gender, forKey: .gender)
        try container.encodeIfPresent(birth, forKey: .birth)
        try container.encodeIfPresent(death, forKey: .death)
    }
}

